SF tests to run

values of motor position enum
values of #define 60000 (does it need to be -u suffix?)

ToDo.
x	Refactor main code
	Trigger extra motors
x	Battery life function
x	Shutdown function
	Volume functions

	Sound files

	Test programming BLE

	IMU calibration sequence

x	add 33ohm resistors to USB
x	test serial output - 0 ohm next to lipo charger

x	New module enclosure

x	Test programming M4F over SWD
x	Understand how to program BLE

x	Replace non-working switches
x	Remove unneeded programming headers
x	Solder battery in
x	Solder to internal regulator

x	Test vreg/powering from battery

	Test iOS/BLE
		See what the data from the app looks like
		learn how to program the ble module
		Pass data through BLE to Teensy
		Teensy detects new profile and goes into uploading mode
			Blinking blue LED
		Sets parameters
		"Settings updated" Audio

	Audio
x		Access flash memory
x		How to program the flash memory in factory
x		Run RawHardwareTest and debug until it passes (inside SerialFlash lib examples)

x		Volume Control
x			Detect/debounce buttons (Just use regular bounce library)
x			Ability to control digipot (added tested working code 9.5)
x			Linearize sound pressure in software as needed (now done in HW - 2nd red pcb rev)
x			Adjust volume through digipot

		Amp Hardware
x			Wire two speakers in parallel (8ohm) and confirm impedance
x			Test DAC output (sine wave with dc offset)
x			Test DAC signal after DC blocking cap (0V center)
x			Test DAC signal while adjusting digitpot (shifting magnitude, 0V center)
x				Check if feedback should go from in+ to out-
x				Check if one audio channel is at 0V
x			Fix Hardware
x				Add feedback resistors to other channel
x				Add cap isolation to input
x				Cut in- to ground
			Test audio output
			Plug in speakers and test audio
				Store a test file in spi flash
				Output into speakers
				Change volume
			Draw final schematics
			Update dev notes about audio schematic

		Sound files
			"Welcome to Swing Forge. Preparing system."
			"Your vest calibration is complete."
			Chime at the back swing limit
			Beep for the volume noise
			Chime2 at end of swing - cycle through phrases? have a "great job" for swings with a low number of errors?
			Low battery
			Shutting down

		Implement in primary code
			On wakeup
			On complete calibration
			On back swing complete
			On full swing complete
			Low battery
			Shutting down

			Changing volume up/down
			Tune volume up/down speed



	Double tap on accelerometer to start the swing
x		Update to latest dev library
x			Move fixed Euler angle function
x			Add other added functions (normalize?)
x		Port MotionDriver 6.12 Library
x		Implement fixed Euler angle function
x		Implement tap detection
x		Tune tap thresholds and timing
		Implement calibration code in new library

	Reducing BOM Cost
x		Check viability of using M0+ (MKL26Z64VFT4)
x		Check viability of using NRF81 chip (M0)
x		Check viability of using NRF82 chip (M4F) $3.95 at q1000
x		Check BOM breakdown, see where we can reduce cost

	Reducing Power Consumption
		Turn off BLE to save power?
		Turn off audio amp to save power


	UI!

	Fabric button for the power switch
	The button responds by vibrating gently, like a cat’s purr when he is awakened.
	The vibration comes in two short spurts, indicating the vest is ready and awake.
	Intro message
	As soon as the intro message is complete, all the vibration motors in the vest vibrate in a “vibration symphony” to create the sensation that the body has been scanned.
	Once calibration is complete, the vest stops vibrating and tells the user: “Your vest calibration is complete”.

	Double tap to start swing, vibration/chime to signal starting swing, position feedback starts right away. Chime at full backswing
	Single tap to exit swing
	Solid green LED while running
	Blinking blue LED while data upload
	Orange breathing LED while idle
	Red flash in between breaths for low battery



Down the line:
	Check if the whole thing will run on LC
	MPU calibration values get stored in eeprom, and then read from eeprom at boot and sent to IMU (or just make IMU save them?) for factory cal.
	make all of the data types in the new imu library consistent
	Save volume level to spi flash, read at boot
	Switch to either MAX98304 (analog in, $0.49) or MAX98357A (I2S in, $1.00)



Schematic/PCB
	Use one of the deepSleep compatible pins for IMU interrupt

	Fix schematic note about Vreg - if I actually use it. drop out is <0.11 V for 500mA
	mcp73831 HAS to be mcp73831-2
	Redo those power input traces
	Redo audio power traces
	Pullups on volume buttons! internal pullups are crazy low resistance
	resistor arrays?

	"not populated" -> "DNP"
	Specs on PCB on schematic
	BLE crystal specs on schematic
	Consistent file names (bottom right)
	Consistent title locations

	Footprint for digipot is way off
	Don't need test pads for SPI
	make a nicer jtag pin pattern

	Make sure USB conn is rated for higher power if we use that
	LIPO current protection
	LIPO Fuel gauge?


	Definitely have to go through the parts list better. NCP177A regulator has active discharge, could be burning lots of current during testing
	Check quiescent current of p-fet, look for a better one